<?php
namespace vale\sage\demonic\addons\types\relics\types;

use pocketmine\entity\EntitySizeInfo;
use pocketmine\entity\Living;
use pocketmine\entity\Location;
use pocketmine\nbt\tag\CompoundTag;
use pocketmine\network\mcpe\protocol\types\entity\EntityIds;
use pocketmine\world\Position;

class OrbRelic extends Living{

	/** @var float **/
	public $height = 0.3125;

    /** @var float **/
	public $width = 0.3125;

    /** @var int */
    public $scale = 2;

    /** @var Position|null */
	public ?Position $position = null;

    /**
     * @param Location $location
     * @param CompoundTag|null $nbt
     * @param Position|null $position
     */
	public function __construct(Location $location, ?CompoundTag $nbt = null, Position $position = null)
	{
		$this->setNameTagAlwaysVisible(true);
		$this->setNameTag("ยงrยง6TEST");
		parent::__construct($location, $nbt);
	}

	/**
	 * @param $pos
	 * @return void
	 */
	public function setPos(Position $pos): void{
		$this->teleport($pos->add(0,1.5,0));
	}

    /**
     * @param int $currentTick
     * @return bool
     */
	public function onUpdate(int $currentTick): bool
	{
		if($this->isFlaggedForDespawn()) return false;
		if($this->location->yaw > 360){
			$this->location->yaw = 0;
		}else{
			$this->location->yaw += 15;
		}
		return parent::onUpdate($currentTick); // TODO: Change the autogenerated stub
	}

    /**
     * @return EntitySizeInfo
     */
	protected function getInitialSizeInfo(): EntitySizeInfo
	{
		return new EntitySizeInfo(1,1,1);
	}

    /**
     * @return string
     */
	public static function getNetworkTypeId(): string
	{
		return EntityIds::ENDER_PEARL;
	}

    /**
     * @return string
     */
	public function getName(): string
	{
		return "Orb";
	}
}
